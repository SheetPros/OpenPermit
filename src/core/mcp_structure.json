{
  "name": "MCP_Protocol",
  "version": "1.0.0",
  "metadata": {
    "description": "Minecraft Protocol Server Structure",
    "source": "awesome-mcp-servers",
    "type": "protocol_definition"
  },
  "components": {
    "packet_structure": {
      "fields": {
        "id": "VarInt",
        "data": "ByteArray",
        "compression": {
          "threshold": "Integer",
          "algorithm": "String"
        }
      },
      "validation": {
        "required": [
          "id",
          "data"
        ],
        "optional": [
          "compression"
        ]
      }
    },
    "server_types": {
      "categories": [
        "authentication",
        "proxy",
        "game_server",
        "query_server"
      ],
      "implementations": {
        "java": {
          "lang": "java",
          "platforms": [
            "jvm",
            "android"
          ],
          "features": [
            "netty",
            "native_protocols"
          ]
        },
        "go": {
          "lang": "go",
          "platforms": [
            "cross_platform"
          ],
          "features": [
            "goroutines",
            "channels"
          ]
        },
        "rust": {
          "lang": "rust",
          "platforms": [
            "cross_platform"
          ],
          "features": [
            "memory_safe",
            "concurrent"
          ]
        }
      }
    },
    "data_formats": {
      "packet": {
        "binary": {
          "type": "raw_bytes",
          "encoding": "big_endian"
        },
        "json": {
          "type": "structured",
          "format": "json"
        },
        "nbt": {
          "type": "structured",
          "format": "nbt_binary"
        }
      }
    },
    "protocol_versions": {
      "structure": {
        "major": "Integer",
        "minor": "Integer",
        "patch": "Integer",
        "protocol_number": "Integer"
      },
      "features": {
        "backwards_compatible": "Boolean",
        "forward_compatible": "Boolean",
        "encryption": "Boolean"
      }
    }
  },
  "data_handlers": {
    "packet_readers": {
      "binary": {
        "method": "stream_read",
        "buffer_size": "Integer",
        "endianness": "big"
      },
      "json": {
        "method": "json_parse",
        "schema": "JsonSchema",
        "validation": true
      },
      "nbt": {
        "method": "nbt_decode",
        "compression": "Optional[gzip]"
      }
    },
    "transformers": {
      "packet_to_json": {
        "input": "binary",
        "output": "json",
        "validation": true
      },
      "json_to_packet": {
        "input": "json",
        "output": "binary",
        "validation": true
      }
    }
  },
  "validation": {
    "packet_validation": {
      "size_check": true,
      "type_check": true,
      "schema_validation": true
    },
    "protocol_validation": {
      "version_check": true,
      "compatibility_check": true,
      "encryption_check": true
    }
  }
}